"use strict";(self.webpackChunkp8g_docs=self.webpackChunkp8g_docs||[]).push([[5914],{5617:function(e,n,t){t.r(n),t.d(n,{assets:function(){return g},contentTitle:function(){return m},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return x}});var i=t(3117),o=t(102),s=(t(7294),t(3905)),r=t(5488),a=t(5162),p=t(6975),d=t(4678),l=["components"],c={description:"C++ | JavaScript"},m="Noise",u={unversionedId:"noise",id:"noise",title:"Noise",description:"C++ | JavaScript",source:"@site/examples/noise.md",sourceDirName:".",slug:"/noise",permalink:"/p8g/examples/noise",draft:!1,editUrl:"https://github.com/bernhardfritz/p8g/edit/master/docs/examples/noise.md",tags:[],version:"current",frontMatter:{description:"C++ | JavaScript"},sidebar:"examples",previous:{title:"Mouse events",permalink:"/p8g/examples/mouse-events"},next:{title:"Quadtree",permalink:"/p8g/examples/quadtree"}},g={},x=[],h={toc:x};function f(e){var n=e.components,t=(0,o.Z)(e,l);return(0,s.kt)("wrapper",(0,i.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"noise"},"Noise"),(0,s.kt)(d.Z,{src:"/examples/noise.html",mdxType:"Emscripten"}),(0,s.kt)(r.Z,{groupId:"lang",mdxType:"Tabs"},(0,s.kt)(a.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,s.kt)(p.Z,{language:"cpp",title:"noise.cpp",mdxType:"CodeBlock"},'#include "p8g.hpp"\n#include "SimplexNoise.h"\n#include <cmath>\n\nusing namespace p8g;\n\nfloat r = 0.f;\n\nvoid p8g::draw() {\n  background(255);\n  for (int y = 0; y < height; y++) {\n    stroke(255 * SimplexNoise::noise(y));\n    for (int x = 0; x < width; x++) {\n      point(99 * SimplexNoise::noise((x - y) / 99.f + r) * sinf((x + y) / 99.f) + y, x);\n    }\n  }\n  r -= M_PI / 99.f;\n}\n\nvoid p8g::keyPressed() {}\nvoid p8g::keyReleased() {}\nvoid p8g::mouseMoved() {}\nvoid p8g::mousePressed() {}\nvoid p8g::mouseReleased() {}\nvoid p8g::mouseWheel(float delta) {}\n\nint main() {\n  run(320, 320, "Noise");\n}')),(0,s.kt)(a.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,s.kt)(p.Z,{language:"html",title:"index.html",mdxType:"CodeBlock"},'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Noise</title>\n  </head>\n  <body>\n    <script type="module" src="noise.js"><\/script>\n  </body>\n</html>'),(0,s.kt)(p.Z,{language:"js",title:"noise.js",mdxType:"CodeBlock"},"import p8g, {\n  background,\n  createCanvas,\n  height,\n  point,\n  stroke,\n  width,\n} from 'p8g.js';\nimport { createNoise2D } from 'simplex-noise';\n\nconst noise2D = createNoise2D();\nlet r = 0;\n\np8g.draw = () => {\n  background(255);\n  for (let y = 0; y < height; y++) {\n    stroke(255 * noise2D(y, 0));\n    for (let x = 0; x < width; x++) {\n      point(99 * noise2D((x - y) / 99 + r, 0) * Math.sin((x + y) / 99) + y, x);\n    }\n  }\n  r -= Math.PI / 99;\n};\n\ncreateCanvas(320, 320);\n"))))}f.isMDXComponent=!0},4678:function(e,n,t){t.d(n,{Z:function(){return r}});var i=t(7294),o=t(6649),s=t(4996);function r(e){return i.createElement(o.Z,{src:(0,s.Z)(e.src),style:{width:"1px",minWidth:"100%"}})}}}]);