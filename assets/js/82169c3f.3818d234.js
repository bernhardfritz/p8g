"use strict";(self.webpackChunkp8g_docs=self.webpackChunkp8g_docs||[]).push([[1198],{4979:function(e,a,i){i.r(a),i.d(a,{assets:function(){return h},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return m},metadata:function(){return b},toc:function(){return c}});var n=i(3117),l=i(102),t=(i(7294),i(3905)),d=i(5488),r=i(5162),p=i(6975),o=i(4678),g=["components"],m={description:"C | C++ | Java | JavaScript"},s="Flappy Bird",b={unversionedId:"flappy-bird",id:"flappy-bird",title:"Flappy Bird",description:"C | C++ | Java | JavaScript",source:"@site/examples/flappy-bird.md",sourceDirName:".",slug:"/flappy-bird",permalink:"/p8g/examples/flappy-bird",draft:!1,editUrl:"https://github.com/bernhardfritz/p8g/edit/master/docs/examples/flappy-bird.md",tags:[],version:"current",frontMatter:{description:"C | C++ | Java | JavaScript"},sidebar:"examples",previous:{title:"Fireworks",permalink:"/p8g/examples/fireworks"},next:{title:"Keyboard events",permalink:"/p8g/examples/keyboard-events"}},h={},c=[],y={toc:c};function u(e){var a=e.components,i=(0,l.Z)(e,g);return(0,t.kt)("wrapper",(0,n.Z)({},y,i,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"flappy-bird"},"Flappy Bird"),(0,t.kt)(o.Z,{src:"/examples/flappy-bird.html",mdxType:"Emscripten"}),(0,t.kt)(d.Z,{groupId:"lang",mdxType:"Tabs"},(0,t.kt)(r.Z,{value:"c",label:"C",mdxType:"TabItem"},(0,t.kt)(p.Z,{language:"c",title:"flappy_bird.c",mdxType:"CodeBlock"},'#define USING_NAMESPACE_P8G\n#include "p8g.h"\n\n#include <math.h>\n\nImage background_day;\nImage base;\nImage yellowbird[3];\n\nvoid draw() {\n    image(background_day, 0, 0);\n    image(base, -(millis() / 10) % width, height - base.height);\n    image(base, -(millis() / 10) % width + base.width, height - base.height);\n    imageMode(CENTER);\n    image(yellowbird[(millis() / 100) % (sizeof(yellowbird) / sizeof(yellowbird[0]))], width / 2, height / 2 + 2 * sinf(millis() / 100.f));\n}\n\nint main() {\n    background_day = loadImage("background-day.png");\n    base = loadImage("base.png");\n    yellowbird[0] = loadImage("yellowbird-downflap.png");\n    yellowbird[1] = loadImage("yellowbird-midflap.png");\n    yellowbird[2] = loadImage("yellowbird-upflap.png");\n    run(288, 512, "Flappy Bird");\n}\n')),(0,t.kt)(r.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,t.kt)(p.Z,{language:"cpp",title:"flappy_bird.cpp",mdxType:"CodeBlock"},'#include "p8g.hpp"\n\n#include <math.h>\n#include <vector>\n\nusing namespace p8g;\n\nImage background_day = loadImage("background-day.png");\nImage base = loadImage("base.png");\nstd::vector<Image> yellowbird = { loadImage("yellowbird-downflap.png"), loadImage("yellowbird-midflap.png"), loadImage("yellowbird-upflap.png") };\n\nvoid p8g::draw() {\n    image(background_day, 0, 0);\n    image(base, -(millis() / 10) % width, height - base.height);\n    image(base, -(millis() / 10) % width + base.width, height - base.height);\n    imageMode(CENTER);\n    image(yellowbird[(millis() / 100) % yellowbird.size()], width / 2, height / 2 + 2 * sinf(millis() / 100.f));\n}\n\nint main() {\n    run(288, 512, "Flappy Bird");\n}')),(0,t.kt)(r.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,t.kt)(p.Z,{language:"java",title:"FlappyBird.java",mdxType:"CodeBlock"},'import io.github.bernhardfritz.p8g.Image;\nimport io.github.bernhardfritz.p8g.Sketch;\n\nimport java.util.List;\n\npublic class FlappyBird extends Sketch {\n    Image backgroundDay = loadImage("background-day.png");\n    Image base = loadImage("base.png");\n    List<Image> yellowbird = List.of(loadImage("yellowbird-downflap.png"), loadImage("yellowbird-midflap.png"), loadImage("yellowbird-upflap.png"));\n\n    @Override\n    protected void draw() {\n        image(backgroundDay, 0, 0);\n        image(base, -(millis() / 10) % width, height - base.height);\n        image(base, -(millis() / 10) % width + base.width, height - base.height);\n        imageMode(CENTER);\n        image(yellowbird.get((millis() / 100) % yellowbird.size()), width / 2, height / 2 + 2 * (float) Math.sin(millis() / 100.f));\n    }\n\n    public static void main(String[] args) {\n        Sketch sketch = new FlappyBird();\n        sketch.run(288, 512, "Flappy Bird");\n    }\n}\n')),(0,t.kt)(r.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,t.kt)(p.Z,{language:"js",title:"flappy-bird.js",mdxType:"CodeBlock"},"import p8g, {\n  createCanvas,\n  CENTER,\n  height,\n  image,\n  imageMode,\n  loadImage,\n  millis,\n  width,\n} from './p8g.js';\n\nconst background_day = await loadImage('background-day.png');\nconst base = await loadImage('base.png');\nconst yellowbird = await Promise.all([\n  loadImage('yellowbird-downflap.png'),\n  loadImage('yellowbird-midflap.png'),\n  loadImage('yellowbird-upflap.png'),\n]);\n\np8g.draw = () => {\n  image(background_day, 0, 0);\n  image(base, -(millis() / 10) % width, height - base.height);\n  image(base, (-(millis() / 10) % width) + base.width, height - base.height);\n  imageMode(CENTER);\n  image(\n    yellowbird[Math.floor((millis() / 100) % yellowbird.length)],\n    width / 2,\n    height / 2 + 2 * Math.sin(millis() / 100),\n  );\n};\n\ncreateCanvas(288, 512);\n"),(0,t.kt)(p.Z,{language:"html",title:"index.html",mdxType:"CodeBlock"},'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Flappy Bird</title>\n  </head>\n  <body>\n    <script type="module" src="flappy-bird.js"><\/script>\n  </body>\n</html>\n'))))}u.isMDXComponent=!0},4678:function(e,a,i){i.d(a,{Z:function(){return d}});var n=i(7294),l=i(6649),t=i(4996);function d(e){return n.createElement(l.Z,{src:(0,t.Z)(e.src),style:{width:"1px",minWidth:"100%"}})}}}]);