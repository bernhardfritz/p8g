"use strict";(self.webpackChunkp8g_docs=self.webpackChunkp8g_docs||[]).push([[1198],{3895:function(e,a,n){n.r(a),n.d(a,{assets:function(){return c},contentTitle:function(){return u},default:function(){return y},frontMatter:function(){return m},metadata:function(){return g},toc:function(){return b}});var i=n(3117),l=n(102),t=(n(7294),n(3905)),r=n(5488),d=n(5162),o=n(9819),s=n(4678),p=["components"],m={description:"C | C++ | Java | JavaScript | TypeScript"},u="Flappy Bird",g={unversionedId:"flappy-bird",id:"flappy-bird",title:"Flappy Bird",description:"C | C++ | Java | JavaScript | TypeScript",source:"@site/examples/flappy-bird.md",sourceDirName:".",slug:"/flappy-bird",permalink:"/p8g/examples/flappy-bird",draft:!1,editUrl:"https://github.com/bernhardfritz/p8g/edit/master/docs/examples/flappy-bird.md",tags:[],version:"current",frontMatter:{description:"C | C++ | Java | JavaScript | TypeScript"},sidebar:"examples",previous:{title:"Fireworks",permalink:"/p8g/examples/fireworks"},next:{title:"Keyboard events",permalink:"/p8g/examples/keyboard-events"}},c={},b=[],h={toc:b};function y(e){var a=e.components,n=(0,l.Z)(e,p);return(0,t.kt)("wrapper",(0,i.Z)({},h,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"flappy-bird"},"Flappy Bird"),(0,t.kt)(s.Z,{src:"/examples/flappy-bird.html",mdxType:"Emscripten"}),(0,t.kt)(r.Z,{groupId:"lang",mdxType:"Tabs"},(0,t.kt)(d.Z,{value:"c",label:"C",mdxType:"TabItem"},(0,t.kt)(o.Z,{language:"c",title:"flappy_bird.c",mdxType:"CodeBlock"},'#define USING_NAMESPACE_P8G\n#include "p8g.h"\n\n#include <math.h>\n\nImage background_day;\nImage base;\nImage yellowbird[3];\n\nvoid draw() {\n    image(background_day, 0, 0);\n    image(base, -(millis() / 10) % width, height - base.height);\n    image(base, -(millis() / 10) % width + base.width, height - base.height);\n    imageMode(CENTER);\n    image(yellowbird[(millis() / 100) % (sizeof(yellowbird) / sizeof(yellowbird[0]))], width / 2, height / 2 + 2 * sinf(millis() / 100.f));\n}\n\nvoid keyPressed() {}\nvoid keyReleased() {}\nvoid mouseMoved() {}\nvoid mousePressed() {}\nvoid mouseReleased() {}\nvoid mouseWheel(float delta) {}\n\nint main() {\n    background_day = loadImage("background-day.png");\n    base = loadImage("base.png");\n    yellowbird[0] = loadImage("yellowbird-downflap.png");\n    yellowbird[1] = loadImage("yellowbird-midflap.png");\n    yellowbird[2] = loadImage("yellowbird-upflap.png");\n    run(288, 512, "Flappy Bird");\n}\n')),(0,t.kt)(d.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,t.kt)(o.Z,{language:"cpp",title:"flappy_bird.cpp",mdxType:"CodeBlock"},'#include "p8g.hpp"\n\n#include <math.h>\n#include <vector>\n\nusing namespace p8g;\n\nImage background_day = loadImage("background-day.png");\nImage base = loadImage("base.png");\nstd::vector<Image> yellowbird = { loadImage("yellowbird-downflap.png"), loadImage("yellowbird-midflap.png"), loadImage("yellowbird-upflap.png") };\n\nvoid p8g::draw() {\n    image(background_day, 0, 0);\n    image(base, -(millis() / 10) % width, height - base.height);\n    image(base, -(millis() / 10) % width + base.width, height - base.height);\n    imageMode(CENTER);\n    image(yellowbird[(millis() / 100) % yellowbird.size()], width / 2, height / 2 + 2 * sinf(millis() / 100.f));\n}\n\nvoid p8g::keyPressed() {}\nvoid p8g::keyReleased() {}\nvoid p8g::mouseMoved() {}\nvoid p8g::mousePressed() {}\nvoid p8g::mouseReleased() {}\nvoid p8g::mouseWheel(float delta) {}\n\nint main() {\n    run(288, 512, "Flappy Bird");\n}')),(0,t.kt)(d.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,t.kt)(o.Z,{language:"java",title:"FlappyBird.java",mdxType:"CodeBlock"},'import io.github.bernhardfritz.p8g.Image;\nimport io.github.bernhardfritz.p8g.Sketch;\n\nimport java.util.List;\n\npublic class FlappyBird extends Sketch {\n    Image backgroundDay = loadImage("background-day.png");\n    Image base = loadImage("base.png");\n    List<Image> yellowbird = List.of(loadImage("yellowbird-downflap.png"), loadImage("yellowbird-midflap.png"), loadImage("yellowbird-upflap.png"));\n\n    @Override\n    protected void draw() {\n        image(backgroundDay, 0, 0);\n        image(base, -(millis() / 10) % width, height - base.height);\n        image(base, -(millis() / 10) % width + base.width, height - base.height);\n        imageMode(CENTER);\n        image(yellowbird.get((millis() / 100) % yellowbird.size()), width / 2, height / 2 + 2 * (float) Math.sin(millis() / 100.f));\n    }\n\n    public static void main(String[] args) {\n        Sketch sketch = new FlappyBird();\n        sketch.run(288, 512, "Flappy Bird");\n    }\n}\n')),(0,t.kt)(d.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,t.kt)(o.Z,{language:"js",title:"flappy-bird.js",mdxType:"CodeBlock"},"import p8g, {\n  createCanvas,\n  CENTER,\n  height,\n  image,\n  imageMode,\n  loadImage,\n  millis,\n  width,\n} from 'p8g.js';\n\nconst background_day = await loadImage('background-day.png');\nconst base = await loadImage('base.png');\nconst yellowbird = await Promise.all([\n  loadImage('yellowbird-downflap.png'),\n  loadImage('yellowbird-midflap.png'),\n  loadImage('yellowbird-upflap.png'),\n]);\n\np8g.draw = () => {\n  image(background_day, 0, 0);\n  image(base, -(millis() / 10) % width, height - base.height);\n  image(base, (-(millis() / 10) % width) + base.width, height - base.height);\n  imageMode(CENTER);\n  image(\n    yellowbird[Math.floor((millis() / 100) % yellowbird.length)],\n    width / 2,\n    height / 2 + 2 * Math.sin(millis() / 100),\n  );\n};\n\ncreateCanvas(288, 512);\n"),(0,t.kt)(o.Z,{language:"html",title:"index.html",mdxType:"CodeBlock"},'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Flappy Bird</title>\n  </head>\n  <body>\n    <script type="module" src="flappy-bird.js"><\/script>\n  </body>\n</html>\n')),(0,t.kt)(d.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,t.kt)(o.Z,{language:"ts",title:"flappy-bird.ts",mdxType:"CodeBlock"},"import p8g, {\n  CENTER,\n  Image,\n  createCanvas,\n  height,\n  image,\n  imageMode,\n  loadImage,\n  millis,\n  width,\n} from 'p8g.js';\n\nconst background_day: Image = await loadImage('background-day.png');\nconst base: Image = await loadImage('base.png');\nconst yellowbird: Image[] = await Promise.all([\n  loadImage('yellowbird-downflap.png'),\n  loadImage('yellowbird-midflap.png'),\n  loadImage('yellowbird-upflap.png'),\n]);\n\np8g.draw = () => {\n  image(background_day, 0, 0);\n  image(base, -(millis() / 10) % width, height - base.height);\n  image(base, (-(millis() / 10) % width) + base.width, height - base.height);\n  imageMode(CENTER);\n  image(\n    yellowbird[Math.floor((millis() / 100) % yellowbird.length)],\n    width / 2,\n    height / 2 + 2 * Math.sin(millis() / 100),\n  );\n};\n\ncreateCanvas(288, 512);\n"),(0,t.kt)(o.Z,{language:"html",title:"index.html",mdxType:"CodeBlock"},'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Flappy Bird</title>\n  </head>\n  <body>\n    <script type="module" src="flappy-bird.ts"><\/script>\n  </body>\n</html>'))))}y.isMDXComponent=!0},5162:function(e,a,n){n.d(a,{Z:function(){return r}});var i=n(7294),l=n(6010),t="tabItem_Ymn6";function r(e){var a=e.children,n=e.hidden,r=e.className;return i.createElement("div",{role:"tabpanel",className:(0,l.Z)(t,r),hidden:n},a)}},5488:function(e,a,n){n.d(a,{Z:function(){return g}});var i=n(3117),l=n(7294),t=n(6010),r=n(2389),d=n(7392),o=n(7094),s=n(2466),p="tabList__CuJ",m="tabItem_LNqP";function u(e){var a,n,r=e.lazy,u=e.block,g=e.defaultValue,c=e.values,b=e.groupId,h=e.className,y=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=c?c:y.map((function(e){var a=e.props;return{value:a.value,label:a.label,attributes:a.attributes}})),v=(0,d.l)(f,(function(e,a){return e.value===a.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var w=null===g?g:null!=(a=null!=g?g:null==(n=y.find((function(e){return e.props.default})))?void 0:n.props.value)?a:y[0].props.value;if(null!==w&&!f.some((function(e){return e.value===w})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=(0,o.U)(),I=k.tabGroupChoices,T=k.setTabGroupChoices,C=(0,l.useState)(w),E=C[0],x=C[1],Z=[],_=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var N=I[b];null!=N&&N!==E&&f.some((function(e){return e.value===N}))&&x(N)}var B=function(e){var a=e.currentTarget,n=Z.indexOf(a),i=f[n].value;i!==E&&(_(a),x(i),null!=b&&T(b,String(i)))},M=function(e){var a,n=null;switch(e.key){case"ArrowRight":var i,l=Z.indexOf(e.currentTarget)+1;n=null!=(i=Z[l])?i:Z[0];break;case"ArrowLeft":var t,r=Z.indexOf(e.currentTarget)-1;n=null!=(t=Z[r])?t:Z[Z.length-1]}null==(a=n)||a.focus()};return l.createElement("div",{className:(0,t.Z)("tabs-container",p)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":u},h)},f.map((function(e){var a=e.value,n=e.label,r=e.attributes;return l.createElement("li",(0,i.Z)({role:"tab",tabIndex:E===a?0:-1,"aria-selected":E===a,key:a,ref:function(e){return Z.push(e)},onKeyDown:M,onFocus:B,onClick:B},r,{className:(0,t.Z)("tabs__item",m,null==r?void 0:r.className,{"tabs__item--active":E===a})}),null!=n?n:a)}))),r?(0,l.cloneElement)(y.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},y.map((function(e,a){return(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==E})}))))}function g(e){var a=(0,r.Z)();return l.createElement(u,(0,i.Z)({key:String(a)},e))}},4678:function(e,a,n){n.d(a,{Z:function(){return r}});var i=n(7294),l=n(6649),t=n(4996);function r(e){return i.createElement(l.Z,{src:(0,t.Z)(e.src),style:{width:"1px",minWidth:"100%"}})}}}]);